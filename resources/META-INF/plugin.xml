<idea-plugin>
	<id>LivePlugin</id>
	<name>LivePlugin</name>
	<version>0.6 beta</version>
	<vendor url="https://github.com/dkandalov/live-plugin"
            email="dmitry.kandalov [at] gmail.com">Dmitry Kandalov</vendor>
	<!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html -->
	<!-- since IJ 2016.3 -->
	<idea-version since-build="163.0"/>
	<category>Plugin Development</category>
	<description>
		<![CDATA[<html><body>
This is a plugin for IntelliJ IDEs to write plugins at runtime without having to restart IDE.
It uses Groovy as main scripting language and has experimental support for Scala and Clojure.
<br/><br/>
To get started:
<ul>
<li>open "Plugins" tool window</li>
<li>select one of the plugin entries in the panel
    (entries are folders, and "plugin.groovy" are startup scripts for plugins)</li>
<li>click "Run" icon to execute plugin (or use keyboard shortcut "alt+C, alt+E" or "ctrl+shift+L")</li>
</ul>
If the above worked fine:
<ul>
<li>modify "plugin.groovy" and rerun plugin to see results</li>
<li>add built-in plugin examples and experiment with them</li>
<li>for more details see <a href="https://github.com/dkandalov/live-plugin">readme on GitHub</a></li>
</ul>

If something doesn't work, feel free to <a href="https://github.com/dkandalov/live-plugin/issues">report an issue</a>.
<br/>
(To use alt+... shortcuts on OSX with JDK8 you might need to edit keyboard layout, please see
<a href="https://github.com/dkandalov/live-plugin/wiki/Alt-keyboard-shortcuts-on-osx">this wiki page</a>.)
    </body></html>]]>
	</description>

    <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->
	<depends>com.intellij.modules.platform</depends>
	<depends optional="true" config-file="github-integration.xml">org.jetbrains.plugins.github</depends>
	<depends optional="true" config-file="junit-panel-integration.xml">JUnit</depends>
	<depends optional="true">org.jetbrains.kotlin</depends>

	<application-components>
		<component>
			<implementation-class>liveplugin.LivePluginAppComponent</implementation-class>
		</component>
	</application-components>

	<actions>
		<action id="LivePlugin.RunPlugin" class="liveplugin.pluginrunner.RunPluginAction" text="Run Current Plugin">
			<keyboard-shortcut keymap="$default" first-keystroke="alt c" second-keystroke="alt e"/>
			<keyboard-shortcut keymap="$default" first-keystroke="control shift l"/>
		</action>
		<action id="LivePlugin.TestPlugin" class="liveplugin.pluginrunner.TestPluginAction" text="Test Current Plugin">
			<keyboard-shortcut keymap="$default" first-keystroke="alt c" second-keystroke="alt t"/>
		</action>

		<group id="LivePlugin.Popup.MainActions">
			<action id="LivePlugin.NewGroovyFileAction" class="liveplugin.toolwindow.NewGroovyFileAction" text="New Groovy File"/>
			<action id="LivePlugin.NewKotlinFileAction" class="liveplugin.toolwindow.NewKotlinFileAction" text="New Kotlin File"/>
			<action id="LivePlugin.NewScalaFileAction" class="liveplugin.toolwindow.NewScalaFileAction" text="New Scala File"/>
			<action id="LivePlugin.NewClojureFileAction" class="liveplugin.toolwindow.NewClojureFileAction" text="New Clojure File"/>
			<action id="LivePlugin.NewDirectoryAction" class="com.intellij.openapi.fileChooser.actions.NewFolderAction"
			        text="New Directory" icon="/nodes/folder.png"/>
			<action id="LivePlugin.RenameFileAction" class="liveplugin.toolwindow.RenameFileAction" text="Rename"
			        use-shortcut-of="RenameElement"/>
		</group>
		<group id="LivePlugin.Popup">
			<reference id="LivePlugin.Popup.MainActions"/>
			<separator/>
			<action id="LivePlugin.FileDeleteAction" class="com.intellij.openapi.fileChooser.actions.FileDeleteAction" text="Delete"/>
		</group>
	</actions>

	<extensions defaultExtensionNs="com.intellij">
		<applicationService serviceInterface="liveplugin.Settings" serviceImplementation="liveplugin.Settings"/>
		<statistics.usagesCollector implementation="liveplugin.LivePluginUsagesCollector"/>
		<nonProjectFileWritingAccessExtension implementation="liveplugin.MakePluginFilesAlwaysEditable"/>
        <defaultHighlightingSettingProvider implementation="liveplugin.EnableHighlightingForLivePlugins"/>
		<intentionAction>
			<className>liveplugin.intention.AddToClassPathGroovyIntention</className>
			<category>LivePlugin</category>
		</intentionAction>
		<intentionAction>
			<className>liveplugin.intention.AddPluginDependencyGroovyIntention</className>
			<category>LivePlugin</category>
		</intentionAction>
	</extensions>

</idea-plugin>
